#!/bin/bash

################################################################################################ 
	#################### Torque preparation: PBS commands ###################
################################################################################################

### Use the bourne shell
#PBS -S /bin/bash 			

### Run in the queue named default
#PBS -q default				

#### #PBS -d /home/groups/hpcbio_shared/azza/H3A_NextGen_assessment_set3/src-azza

### Specify the number of cpus for your job (nodes and processors)
#PBS -l nodes=1:ppn=23			

### the destination for reporting (defaults to script's directory): Seperate these to get a better sense!
#PBS -o localhost:$HOME/outputs.log.txt
#PBS -e localhost:$HOME/errors.log.txt		

### email me when my job aborts or ends
#PBS -M aeahmed@illinois.edu
#PBS -m abe

# Calculate the number of processors allocated to this run.
NPROCS=`wc -l < $PBS_NODEFILE`

# Calculate the number of nodes allocated.
NNODES=`uniq $PBS_NODEFILE | wc -l`

### Display the job context
echo
echo "Running the job named ($PBS_JOBNAME) identified by ($PBS_JOBID) requested by ($PBS_O_LOGNAME)" > jobinfo.txt
echo "Job is run on host (`hostname`) from the host cluster ($PBS_O_HOST)" >> jobinfo.txt
echo Using ${NPROCS} processors across ${NNODES} nodes >> jobinfo.txt
echo -e  "\n Time is `date`" >> jobinfo.txt

### By default TORQUE launches processes from your home directory, you may need to switch to the working directory; 
printf "\n Note: This job is being executed on the directory `pwd`, even though it was submitted from the directory $PBS_O_WORKDIR "

echo -e "\n\n########################################################################################"
echo -e "#############                Pipeline starts here!              ###############"
echo -e "########################################################################################\n\n"

######### Paths defintions:
reference="/home/groups/hpcbio_shared/azza/H3A_NextGen_assessment_set3/data/genome"
reads="/home/groups/hpcbio_shared/azza/H3A_NextGen_assessment_set3/data/reads"
results="/home/groups/hpcbio_shared/azza/H3A_NextGen_assessment_set3/results"

	# an alternative to having to copy the reference genome (from the gatk bundle in the mirror folder), would have been creating a soft link to it:
	# ln -s /home/mirrors/gatk_bundle/2.8/hg19/ucsc.hg19.fasta reference
	# and now from this point onward, reference is accepted instead of the long path to ucsc.hg19.fasta

######### Some parts were already done, so it would be a good idea to not rerun them!
if [ $done_parts ]; then

	######### Reference preparation:
	gunzip $reference/ucsc*

	# The used reference is from the gatk bundle, so no need to do the steps below:
		#module load samtools/1.2
		#samtools faidx $reads/hs_ref_GRCh38.p2_chr1.fa
	# But, you need to index. The indexed file from gatk was generated by fadix, not by bwa's index!
	module load bwa/0.7.10
	cd $reference 
	# bwa index is incapable of moving its output around. Do it manually!Generally speaking(moving the files 	from indexing can be tricky with some tools. Better to always go the directory)
	bwa index -a bwtsw -p human $reference/ucsc.hg19.fasta
		# the -p parameter is just to name the resulting files human.xx where xx is the various extensions!

	# Also note you are using the complete genome even though you are only interested in certain parts
	# The good news is that this is a one time thing! Your reference can now deal with whatever it is that is 	human!

	######### Quality checking: 
	module load fastqc/0.11.4
	fastqc $reads/H3A_NextGen_assessment.Chr1_50X.set3_read1.fq --outdir=$results
	fastqc $reads/H3A_NextGen_assessment.Chr1_50X.set3_read2.fq --outdir=$results
	# In reality, to see this result, just type: firefox required.read_fastqc.html
	# Reports show data of good quality, except for some kmer content in read1 (Gloria: its near the end, so 	should be ok). Also, the encoding is Sanger, so the reads are neat..
	# A pertinent question is about the read group, Do I accept the info presented on the chromosome here?
	

	######### for the sake of sanity, I created 2 couple read files:
	cp H3A_NextGen_assessment.Chr1_50X.set3_read1.fq read1.fq
	cp H3A_NextGen_assessment.Chr1_50X.set3_read2.fq read2.fq
fi

######### Alignment: The default settings
cd $results/p2_alignment/
mkdir default
cd default

module load bwa/0.7.15
module load samtools/1.3.1

START=$(date +%s)
bwa mem -M -t 12 -R  '@RG\tID:foo\tSM:bar\tLB:library1' $reference/human $reads/read1.fq $reads/read2.fq > a.default.0.sam
# note that it is the indexed file(s) that was needed in this stage. It has a different name than the 	reference (remember the -p argument), so I need to use its name (human)
END=$(date +%s)
[ -s a.default.0.sam ] && echo "Default alignment successeful!" || exit
alignments=$(samtools view -c a.default.0.sam)
if [ "$alignments" -eq 0]; then
	echo			
	echo " Unfortunately, I can NOT process the your request with default parameters" 
	echo
	exit
fi
samtools view -bS a.default.0.sam > a.default.0.bam

DIFF=$(( $END - $START ))

echo 
echo "BWA Mem aligned :$alignments: using parameter :default: (*=0=)"  > a.default.0.summary.txt
echo 
echo "Execution time is :$DIFF: seconds" >> a.default.0.summary.txt
echo 
samtools flagstat a.default.0.bam >> a.default.0.summary.txt  # Generating summary statistics


######### Alignment: The combinatorial settings: changing a variable at a time, with the objective of having a sense of how things work


#echo -e "\n\n########################################################################################"
#echo -e "#############                CHECKING PARAMETERS                         ###############"
#echo -e "########################################################################################\n\n"

declare -a parameters=(k r w d c D m W A B O E L U T)
declare -a min=(3 .5 20 20 300 .1 20 0 1 1 1 1 1 1 10)
declare -a step=(3 .5 20 20 300 .1 20 3 2 2 2 2 2 3 10)
declare -a max=(60 4 200 200 10000 1 200 30 20 20 20 20 20 40 80)

cd cd $results/p2_alignment/
mkdir ${parameters[@]}

echo The parameters being tested and their ranges are given below:
echo paramters: ${parameters[@]}, 
echo minimum  : ${min[@]} 
echo maximum  : ${max[@]}

pos=0
while [ $pos -lt ${#parameters[@]} ]; do
        par=${parameters[pos]}
	cd $results/p2_alignment/$par
        for i in $(seq ${min[pos]} ${step[pos]} ${max[pos]}); do
		START=$(date +%s)	
		bwa mem -t 12 -$par "$i" -M -R  '@RG\tID:foo\tSM:bar\tLB:library1'  $reference/human $reads/read1.fq $reads/read2.fq  > "a.$par.$i.sam"
		END=$(date +%s)
		DIFF=$(( $END - $START ))
		if [ -s "a.$par.$i.sam" ]; then
			echo "Alignment successeful! with -$par $i" 
		else 
			echo "BWA aligned :0: using default parameter (*=0=)"> "a.$par.$i.summary.txt"
			echo "Execution time is :0: seconds" >> "a.$par.$i.summary.txt"
			continue
		fi
		alignments=$(samtools view -c a.$par.$i.sam)
		if [ "$alignments" -eq 0]; then
			echo			
			echo " Unfortunately, I can NOT process the parameter $par = $i with bwa mem" > "a.$par.$i.summary.txt"
			echo
			echo "BWA aligned :0: using default parameter (*=0=)" > "a.$par.$i.summary.txt"
			echo "Execution time is :0: seconds" >> "a.$par.$i.summary.txt"
			continue
		fi

		echo 
		echo "BWA Mem aligned :$alignments: using parameter :$par: =$i" > "a.$par.$i.summary.txt"
		echo 
		echo "Execution time is :$DIFF: seconds" >> "a.$par.$i.summary.txt"
		echo 
		samtools view -bS "a.$par.$i.sam" >"a.$par.$i.bam"
		samtools flagstat a.$par.$i.bam >> "a.$par.$i.summary.txt"
	done
	let pos+=1
done


#igv mAYBE


#module load picard-tools/1.141

# I actually ran this command on my node itself!!!
#java -jar picard.jar FastqToSam F1=/home/groups/hpcbio_shared/azza/H3A_NextGen_assessment_set3/data/reads/H3A_NextGen_assessment.Chr1_50X.set3_read1.fq F2=/home/groups/hpcbio_shared/azza/H3A_NextGen_assessment_set3/data/reads/H3A_NextGen_assessment.Chr1_50X.set3_read2.fq   O=/home/groups/hpcbio_shared/azza/H3A_NextGen_assessment_set3/results/fastq_to_bam.bam     SM=for_tool_testing 

#java -jar picard.jar MergeBamAlignment ALIGNED=/home/groups/hpcbio_shared/azza/H3A_NextGen_assessment_set3/results/aligned.bam UNMAPPED=/home/groups/hpcbio_shared/azza/H3A_NextGen_assessment_set3/results/fastq_to_bam.bam    O=merge_alignments.bam      R=/home/groups/hpcbio_shared/azza/H3A_NextGen_assessment_set3/data/reads/hs_ref_GRCh38.p2_chr1.fa

#################################################################################################### 
################################ What are the group read info??? ################################
####################################################################################################


echo -e "\n\n########################################################################################"
echo -e "##############                 EXITING NOW                            ##################"	
echo -e "########################################################################################\n\n"
